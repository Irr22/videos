import minecraft_launcher_lib, os, subprocess, tkinter, json

ventana = tkinter.Tk()
ventana.geometry('500x500') # El tamño de la pantalla
ventana.title('El titulo que quieras')
ventana.resizable(False,False) # Para que no se puedad canviar el tamaño

user_window = os.environ["USERNAME"]
minecraft_directori = f"C:/Users/{user_window}/AppData/Roaming/.minecraftLauncher"

bt_guardar_datos = tkinter.Button()
bt_ejecutar_minecraft = tkinter.Button()
bt_instalar_versiones = tkinter.Button()
bt_instalar_forge = tkinter.Button()

label_nombre = tkinter.Label(text='Tu nombre')
laber_ram = tkinter.Label(text='La ram que vas a usar')

entry_versiones = tkinter.Entry()
entry_nombre = tkinter.Entry()
entry_ram = tkinter.Entry()

#variable para identificar si se desea guardar los datos 
vopcion = tkinter.IntVar()

versiones_forge = [0]

# Ver todas las versiones que tengo instaladas y mostrarla en un desplegable
versiones_instaladas = minecraft_launcher_lib.utils.get_installed_versions(minecraft_directori)

versiones_instaladas_lista = []
for versiones_instaladas in versiones_instaladas:
    versiones_instaladas_lista.append(versiones_instaladas['id'])

if len(versiones_instaladas_lista) != 0: # Comprovar haver si ahy versiones instaladas
    vers = tkinter.StringVar(ventana)
    vers.set(versiones_instaladas_lista[0])
elif len(versiones_instaladas_lista) == 0:
    vers = 'sin versiones instaladas'
    versiones_instaladas_lista.append('sin versiones instaladas')

versiones_menu_desplegable = tkinter.OptionMenu(ventana, vers, *versiones_instaladas_lista) # Para crear el desplegable con donde se va a crear que va a mostrar y que opciones tiene
versiones_menu_desplegable.config()

#para no tener que escribir los datos cada que se abre el launcher
def recordar_datos():
    datos = {
        "usuario" : entry_nombre.get(),
        "ram" : entry_ram.get(),
    }
    #todavía no se me ocurre como recordar la versión ya que se debe extraer el
    #índice del combobox 

    #acá lo que se hace es guardar toda la información en el Json
    json_datos = json.dumps(datos, indent=4)

    with open("datos_usuario.json", "w") as informacion:
        informacion.write(json_datos)
    
    #si el usuario no seleccionó la palomita de guardar información, 
    #el Json se limpia 
    if vopcion.get() == 0:
        datos = {}
        json_datos = json.dumps(datos, indent=4)
        with open("datos_usuario.json", "w") as informacion:
            informacion.write(json_datos)

#cuando se abre el launcher se establecen los datos guardandos en sus correspondientes campos
def cargar_informacion():
    #leemos el Json
    with open("datos_usuario.json","r") as informacion:
        datos = json.load(informacion)

    #extraemos el nombre del usuario
    nombre = datos.get("usuario", None)
    #la ram que posteriormente guardó
    ram = datos.get("ram", None)

    #si no detecta ningún nombre significa el archivo Json está vació 
    if nombre != None:
        #en tkinter no hay algo como el setter de Java para los campos de 
        #inserción de datos  pero tiene el metodo insert
        entry_nombre.insert(0, nombre)
        entry_ram.insert(0, ram)
        #establezco la variable en 1 para que los usuarios que quieren recordar sus datos
        #tengan la opción habilitada cada que inicien el launcher
        vopcion.set(1)




def instalar_minecraft():
    version = entry_versiones.get()
    if version:
        minecraft_launcher_lib.install.install_minecraft_version(version,minecraft_directori)
        print(f'Se ha instalado la version {version}')
    else:
        print('No se ingreso ninguna version')

def instalar_forge():
    version = vers_forge.get()
    minecraft_launcher_lib.forge.install_forge_version(version,minecraft_directori)
    print('Forge instalado')

def ejecutar_minecraft():
    mine_user = entry_nombre.get()
    version = vers.get()
    ram = f"-Xmx{entry_ram.get()}G"

    options = {
        'username': mine_user,
        'uuid' : '',
        'token': '',

        'jvArguments': [ram,ram], # 4G es para 4 de gigas de RAM
        'launcherVersion': "0.0.2"
    }

    ventana.destroy()
    minecraft_command = minecraft_launcher_lib.command.get_minecraft_command(version,minecraft_directori,options)
    subprocess.run(minecraft_command)

def instalar_versiones_normales():
    global entry_versiones
    ventana_versiones = tkinter.Toplevel(ventana)
    entry_versiones = tkinter.Entry(ventana_versiones)
    entry_versiones.place(x=0,y=0) # Podeis poner la posicion como querais

    bt_instalar_vers = tkinter.Button(ventana_versiones,command=instalar_minecraft,text='Instalar')
    bt_instalar_vers.place(x=0,y=50) # Podeis poner la posicion como querais

def instalar_versiones_forge():
    global entry_versiones, versiones_forge, vers_forge, versiones_forge_menu_desplegable
    ventana_versiones = tkinter.Toplevel(ventana)
    entry_versiones = tkinter.Entry(ventana_versiones)
    entry_versiones.place(x=0,y=0) # Podeis poner la posicion como querais

    bt_instalar_vers = tkinter.Button(ventana_versiones,command=instalar_forge,text='Instalar')
    bt_instalar_vers.place(x=0,y=150) # Podeis poner la posicion como querais

    bt_instalar_ver_vers = tkinter.Button(ventana_versiones,command=ver_versiones_forge,text='Ver versiones')
    bt_instalar_ver_vers.place(x=0,y=50) # Podeis poner la posicion como querais

    vers_forge = tkinter.StringVar(ventana_versiones)
    versiones_forge_menu_desplegable = tkinter.OptionMenu(ventana_versiones, vers_forge, *versiones_forge)
    versiones_forge_menu_desplegable.config()
    versiones_forge_menu_desplegable.place(x=0,y=100)

def ver_versiones_forge():
    global vers_forge, versiones_forge, versiones_forge_menu_desplegable

    # Obtener las nuevas opciones (pueden ser de cualquier origen)
    nuevas_opciones = saver_versiones_instaladas_forge(entry_versiones.get())

    # Actualizar el conjunto de opciones del OptionMenu
    versiones_forge_menu_desplegable['menu'].delete(0, 'end')
    for opcion in nuevas_opciones:
        versiones_forge_menu_desplegable['menu'].add_command(label=opcion, command=tkinter._setit(vers_forge, opcion))

    vers_forge.set(nuevas_opciones[0] if nuevas_opciones else "")  # Establecer la primera opción como la seleccionada

def saver_versiones_instaladas_forge(version):
    numero = str(version)[2:]
    ultima_terminacion = None
    ultima_version = None
    versiones_forge_instaladas = []
    for version_de_minecraft in minecraft_launcher_lib.forge.list_forge_versions():
        if int(numero) >= 10:
            if ultima_version != version_de_minecraft[0:6]:
                if version_de_minecraft[2] == str(numero)[0] and ultima_terminacion != version_de_minecraft[5]:
                    if version_de_minecraft[3] == str(numero)[1]:
                        versiones_forge_instaladas.append(version_de_minecraft)
                        ultima_terminacion = version_de_minecraft[5]
                        ultima_version = version_de_minecraft[0:6]

        elif int(numero) >= 1 and version_de_minecraft[5] == '.' or version_de_minecraft[5] == '-':
            if ultima_version != version_de_minecraft[0:5]:
                if version_de_minecraft[2] == str(numero):
                    versiones_forge_instaladas.append(version_de_minecraft)
                    ultima_terminacion = version_de_minecraft[4]
                    ultima_version = version_de_minecraft[0:5]

    return versiones_forge_instaladas

def menu():



    #se crea el widget check button para dar a elegir si guardar los datos o no
    chb_recordar = tkinter.Checkbutton(ventana,text= "Recordar datos", width= 25, variable= vopcion ).place(x=2,y=150)
    
    cargar_informacion()
    
    bt_guardar_datos.config(command=recordar_datos,text='Guardar', background="#33FF33")
    bt_guardar_datos.place(x=55,y=170)

    bt_instalar_versiones.config(command=instalar_versiones_normales,text='Instalar versiones')
    bt_instalar_versiones.place(x=300,y=0)

    bt_instalar_forge.config(command=instalar_versiones_forge,text='Instalar forge')
    bt_instalar_forge.place(x=300,y=50)

    label_nombre.place(x=0,y=0)
    laber_ram.place(x=0,y=100)

    entry_nombre.place(x=0,y=20)
    entry_ram.place(x=0,y=120)

    bt_ejecutar_minecraft.config(command=ejecutar_minecraft,text='Iniciar')
    bt_ejecutar_minecraft.place(x=200,y=400)
    versiones_menu_desplegable.place(x=0,y=400)
        
    ventana.mainloop()

menu()
